###############################################################################
# COMMANDS.CFG - SAMPLE COMMAND DEFINITIONS FOR NAGIOS 3.2.1
#
# Last Modified: 05-31-2007
#
# NOTES: This config file provides you with some example command definitions
#        that you can reference in host, service, and contact definitions.
#       
#        You don't need to keep commands in a separate file from your other
#        object definitions.  This has been done just to make things easier to
#        understand.
#
###############################################################################


################################################################################
#
# SAMPLE NOTIFICATION COMMANDS
#
# These are some example notification commands.  They may or may not work on
# your system without modification.  As an example, some systems will require 
# you to use "/usr/bin/mailx" instead of "/usr/bin/mail" in the commands below.
#
################################################################################

#ANJUKE_DATE=`date +%F" "%T`

## 'notify-host-by-email' command definition
#define command{
#	command_name	notify-host-by-email
#	command_line	/usr/bin/printf "%b" "Notification Type: $NOTIFICATIONTYPE$\nHost: $HOSTNAME$\nState: $HOSTSTATE$\nAddress: $HOSTADDRESS$\nInfo: $HOSTOUTPUT$\nDate/Time: $LONGDATETIME$\n" | /bin/mail -s "** $NOTIFICATIONTYPE$ Host Alert: $HOSTNAME$ is $HOSTSTATE$ **" $CONTACTEMAIL$
#	}

# 'notify-host-by-email' command definition
define command{
	command_name	notify-host-by-email
#	command_line	/usr/bin/printf "%b" "$HOSiTADDRESS$\nInfo: $HOSTOUTPUT$" | /usr/bin/sendEmail -f IDC10@mon10-003.i.ajkdns.com -t `mysql -uchangedb -p2012zeusops -h10.10.8.35 ops_db -e "select a.label,b.email from item a ,user b where a.owner_id=b.id and label ='$HOSTNAME'"|grep -v "label"|awk '{print$2}'` -cc $CONTACTEMAIL$ -s mail.rt.i.ajkdns.com -u "$NOTIFICATIONTYPE$ Host Alert: $HOSTNAME$ is $HOSTSTATE$"  echo "$HOSTOUTPUT$" >> /tmp/hostname1
	#command_line	/usr/bin/printf "%b" "$HOSTADDRESS$\nInfo: $HOSTOUTPUT$" | /bin/mail -s "$NOTIFICATIONTYPE$ Host Alert: $HOSTNAME$ is $HOSTSTATE$" $CONTACTEMAIL$
#command_line /usr/bin/printf "%b" "$HOSTADDRESS$\nInfo: $HOSTOUTPUT$ $HOSTNAME$" > /tmp/myhostname
         command_line  /usr/local/nagios/etc/objects/host.sh $HOSTNAME$ $HOSTSTATE$ $NOTIFICATIONTYPE$ $CONTACTEMAIL$ $HOSTADDRESS$ $HOSTOUTPUT$
	}

define command{
        command_name    notify-app-host-by-email
#        command_line    /usr/bin/printf "%b" "$HOSTADDRESS$\nInfo: $HOSTOUTPUT$\npost time `date |awk '{print$4}'`" | /usr/bin/sendEmail -f monitor@IDC10-003.i.ajkdns.com -t $CONTACTEMAIL$ -s mail.rt.i.ajkdns.com -u "$NOTIFICATIONTYPE$ Host Alert: $HOSTNAME$ is $HOSTSTATE$"
        command_line    /usr/bin/sendEmail -f monitor@IDC10-003.com -t $CONTACTEMAIL$ -s mail.rt.i.ajkdns.com -u "$NOTIFICATIONTYPE$ $HOSTNAME$ is $HOSTSTATE$" -m "$HOSTADDRESS$\nInfo: $HOSTOUTPUT$\npost time `date |awk '{print$4}'`"
        }



## 'notify-service-by-email' command definition
#define command{
#	command_name	notify-service-by-email
#	command_line	/usr/bin/printf "%b" "Notification Type: $NOTIFICATIONTYPE$\n\nService: $SERVICEDESC$\nHost: $HOSTALIAS$\nAddress: $HOSTADDRESS$\nState: $SERVICESTATE$\nDate/Time: $LONGDATETIME$\n\nAdditional Info:\n\n$SERVICEOUTPUT$" | /bin/mail -s "** $NOTIFICATIONTYPE$ Service Alert: $HOSTALIAS$/$SERVICEDESC$ is $SERVICESTATE$ **" $CONTACTEMAIL$
#	}


# 'notify-service-by-email' command definition
define command{
	command_name	notify-service-by-email
#	command_line	/usr/bin/printf "%b" "Address: $HOSTADDRESS$\nStatus:\n\n$SERVICEOUTPUT$" | /usr/bin/sendEmail -f IDC10@mon10-003.i.ajkdns.com -t `mysql -uchangedb -p2012zeusops -h10.10.8.35 ops_db -e"select a.label,b.email from item a ,user b where a.owner_id=b.id and label ='$HOSTNAME'"|grep -v "label"|awk '{print$2}'` -cc $CONTACTEMAIL$ -s mail.rt.i.ajkdns.com -u "IDC10 Service: $HOSTALIAS$/$SERVICEDESC$ is $SERVICESTATE$" echo "$SERVICEOUTPUT$" >>/tmp/hostname2
	#command_line	/usr/bin/printf "%b" "Address: $HOSTADDRESS$\nStatus:\n\n$SERVICEOUTPUT$" | /bin/mail -s "IDC10 Service: $HOSTALIAS$/$SERVICEDESC$ is $SERVICESTATE$" $CONTACTEMAIL$
#command_line echo hello `mysql -uchangedb -p2012zeusops -h10.10.8.35 ops_db -e"select a.label,b.email from item a ,user b where a.owner_id=b.id and label ='$HOSTNAME$'"|grep -v "label"|awk '{print$2}'` >> /tmp/myhostname
        command_line /usr/local/nagios/etc/objects/service.sh "$HOSTNAME$" "$SERVICEOUTPUT$" "$HOSTADDRESS$" "$CONTACTEMAIL$" "$HOSTALIAS$" "$SERVICEDESC$" "$SERVICESTATE$"
	}


define command{
        command_name    notify-app-service-by-email
#        command_line    /usr/bin/printf "%b" "Address: $HOSTADDRESS$\nStatus:\n\n$SERVICEOUTPUT$\npost time `date |awk '{print$4}'`" | /usr/bin/sendEmail -f monitor10@IDC10-003.i.ajkdns.com -t $CONTACTEMAIL$ -s mail.rt.i.ajkdns.com -u "IDC10 Service: $HOSTALIAS$/$SERVICEDESC$ is $SERVICESTATE$"
        command_line    /usr/bin/sendEmail -f IDC10@IDC10-003.com -t $CONTACTEMAIL$ -s mail.rt.i.ajkdns.com -u "$HOSTALIAS$ $SERVICEDESC$:$SERVICESTATE$" -m "$SERVICEOUTPUT$"

#        command_line    /usr/bin/printf "%b" "Address: $HOSTADDRESS$\nStatus:\n\n$SERVICEOUTPUT$" | /usr/bin/sendEmail -f IDC10@IDC10-003.i.ajkdns.com -t $CONTACTEMAIL$ -s mail.rt.i.ajkdns.com -u "IDC10 Service: $HOSTALIAS$/$SERVICEDESC$ is $SERVICESTATE$"
        }





################################################################################
#
# SAMPLE HOST CHECK COMMANDS
#
################################################################################


# This command checks to see if a host is "alive" by pinging it
# The check must result in a 100% packet loss or 5 second (5000ms) round trip 
# average time to produce a critical error.
# Note: Five ICMP echo packets are sent (determined by the '-p 5' argument)

# 'check-host-alive' command definition
define command{
        command_name    check-host-alive
        command_line    $USER1$/check_ping -H $HOSTADDRESS$ -w 3000.0,80% -c 5000.0,100% -p 5
        }


#define command{
#        command_name    check-ping
#        command_line    $USER1$/check_ping -H $HOSTADDRESS$ -w 300.0,10% -c 500.0,50% -p 5
#        }

define command{
        command_name    check-ping
        command_line    $USER1$/check_ping -H $HOSTADDRESS$ -w 400.0,20% -c 500.0,50% -p 10
        }


# 'check_url' command definition
define command{
        command_name    check_url
        command_line    $USER1$/check_url.sh $HOSTADDRESS$ 
        }


################################################################################
#
# SAMPLE SERVICE CHECK COMMANDS
#
# These are some example service check commands.  They may or may not work on
# your system, as they must be modified for your plugins.  See the HTML 
# documentation on the plugins for examples of how to configure command definitions.
#
# NOTE:  The following 'check_local_...' functions are designed to monitor
#        various metrics on the host that Nagios is running on (i.e. this one).
################################################################################

# 'check_local_disk' command definition
define command{
        command_name    check_local_disk
        command_line    $USER1$/check_disk -w $ARG1$ -c $ARG2$ -p $ARG3$
        }


# 'check_local_load' command definition
define command{
        command_name    check_local_load
        command_line    $USER1$/check_load -w $ARG1$ -c $ARG2$
        }


# 'check_local_procs' command definition
define command{
        command_name    check_local_procs
        command_line    $USER1$/check_procs -w $ARG1$ -c $ARG2$ -s $ARG3$
        }


# 'check_local_users' command definition
define command{
        command_name    check_local_users
        command_line    $USER1$/check_users -w $ARG1$ -c $ARG2$
        }


# 'check_local_swap' command definition
define command{
	command_name	check_local_swap
	command_line	$USER1$/check_swap -w $ARG1$ -c $ARG2$
	}


# 'check_local_mrtgtraf' command definition
define command{
	command_name	check_local_mrtgtraf
	command_line	$USER1$/check_mrtgtraf -F $ARG1$ -a $ARG2$ -w $ARG3$ -c $ARG4$ -e $ARG5$
	}


define command{
        command_name    check_api_baidu
        command_line    $USER1$/api_baidu.sh
        }

define command{
        command_name    check_security
        command_line    $USER1$/security/check_security.sh
        }


################################################################################
# NOTE:  The following 'check_...' commands are used to monitor services on
#        both local and remote hosts.
################################################################################

# 'check_ftp' command definition
define command{
        command_name    check_ftp
        command_line    $USER1$/check_ftp -H $HOSTADDRESS$ $ARG1$
        }


# 'check_hpjd' command definition
define command{
        command_name    check_hpjd
        command_line    $USER1$/check_hpjd -H $HOSTADDRESS$ $ARG1$
        }


# 'check_snmp' command definition
define command{
        command_name    check_snmp
        command_line    $USER1$/check_snmp -H $HOSTADDRESS$ $ARG1$
        }


# 'check_http' command definition
define command{
        command_name    check_http
#        command_line    $USER1$/check_http -I $HOSTADDRESS$ $ARG1$
        command_line    $USER1$/check_http -H $HOSTADDRESS$ $ARG1$ 
        }

#define command{
#        command_name    check_http2
#        command_line    $USER1$/check_http2 -H $ARG1$  -u $ARG2$ 
#        }


# 'check_ssh' command definition
define command{
	command_name	check_ssh
	command_line	$USER1$/check_ssh $ARG1$ $HOSTADDRESS$
	}


# 'check_dhcp' command definition
define command{
	command_name	check_dhcp
	command_line	$USER1$/check_dhcp $ARG1$
	}


# 'check_ping' command definition
define command{
        command_name    check_ping
        command_line    $USER1$/check_ping -H $HOSTADDRESS$ -w $ARG1$ -c $ARG2$ -p 5
        }


# 'check_pop' command definition
define command{
        command_name    check_pop
        command_line    $USER1$/check_pop -H $HOSTADDRESS$ $ARG1$
        }


# 'check_imap' command definition
define command{
        command_name    check_imap
        command_line    $USER1$/check_imap -H $HOSTADDRESS$ $ARG1$
        }


# 'check_smtp' command definition
define command{
        command_name    check_smtp
        command_line    $USER1$/check_smtp -H $HOSTADDRESS$ $ARG1$
        }


# 'check_tcp' command definition
define command{
	command_name	check_tcp
	command_line	$USER1$/check_tcp -H $HOSTADDRESS$ -p $ARG1$ $ARG2$
	}

define command{
	command_name	check_zookeeper
	command_line	$USER1$/check_zookeeper $HOSTADDRESS$ $ARG1$ $ARG2$
	}

#define command{
#	command_name	check_xlog
#	command_line	$USER1$/check_nrpe -H $HOSTADDRESS$
#	}

# 'check_gif' command definition
define command{
	command_name	check_gif
	command_line	$USER1$/check_gif.sh http://stock.eastmoney.com/images/logo.gif
	}

# 'check_udp' command definition
define command{
	command_name	check_udp
	command_line	$USER1$/check_udp -H $HOSTADDRESS$ -p $ARG1$ $ARG2$
	}


# 'check_nt' command definition
define command{
	command_name	check_nt
	command_line	$USER1$/check_nt -H $HOSTADDRESS$ -p 12489 -v $ARG1$ $ARG2$
	}

###mq
define command{
        command_name    check_mq_count
        command_line    $USER1$/check_mq.pl $ARG1$ $ARG2$
        }

################################################################################
#
# SAMPLE PERFORMANCE DATA COMMANDS
#
# These are sample performance data commands that can be used to send performance
# data output to two text files (one for hosts, another for services).  If you
# plan on simply writing performance data out to a file, consider using the 
# host_perfdata_file and service_perfdata_file options in the main config file.
#
################################################################################


# 'process-host-perfdata' command definition
define command{
	command_name	process-host-perfdata
	command_line	/usr/bin/printf "%b" "$LASTHOSTCHECK$\t$HOSTNAME$\t$HOSTSTATE$\t$HOSTATTEMPT$\t$HOSTSTATETYPE$\t$HOSTEXECUTIONTIME$\t$HOSTOUTPUT$\t$HOSTPERFDATA$\n" >> /usr/local/nagios/var/host-perfdata.out
	}


# 'process-service-perfdata' command definition
define command{
	command_name	process-service-perfdata
	command_line	/usr/bin/printf "%b" "$LASTSERVICECHECK$\t$HOSTNAME$\t$SERVICEDESC$\t$SERVICESTATE$\t$SERVICEATTEMPT$\t$SERVICESTATETYPE$\t$SERVICEEXECUTIONTIME$\t$SERVICELATENCY$\t$SERVICEOUTPUT$\t$SERVICEPERFDATA$\n" >> /usr/local/nagios/var/service-perfdata.out
	}

# 'check_nrpe' command definition
define command{
        command_name check_nrpe
        command_line    $USER1$/check_nrpe  -H $HOSTADDRESS$ -c $ARG1$ -t 60
        }


######################################
##memcache

define command{
        command_name    check_memcached
        command_line    $USER1$/check_tcp -H $HOSTADDRESS$ -p 11211 -t 5 -E -s 'stats\r\nquit\r\n' -e 'uptime' -M crit
                }
##########################################
######cisco
define command{
        command_name    check_cisco_load
        command_line    $USER1$/check_snmp_load.pl -H $HOSTADDRESS$ -C public -w 70,65,60 -c 90,80,75 -T $ARG1$
                }

###############################################################
###################pnp
define command{
	command_name process-service-perfdata-file
	command_line /usr/local/pnp4nagios/libexec/process_perfdata.pl --bulk=/usr/local/pnp4nagios/var/service-perfdata
		}

define command{
	command_name process-host-perfdata-file
	command_line /usr/local/pnp4nagios/libexec/process_perfdata.pl --bulk=/usr/local/pnp4nagios/var/host-perfdata
		}	


#######################ntp times#################################
define command{
        command_name    check_ntp_times
        command_line    $USER1$/check_ntp_times  $HOSTADDRESS$
                }


###################dns#################
#define command{
#        command_name    check_dns
#        command_line    $USER1$/check_dns -H  $HOSTADDRESS
#        }


################# 'check dns'
    define command{
            command_name    check_dns
            command_line    $USER1$/check_dns -H $ARG1$ -s $HOSTADDRESS$ -w  2 -c 3
            }
